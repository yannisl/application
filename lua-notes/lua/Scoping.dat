<!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}
{{feature-image:/codeigniter/images/underground_thumb.jpg}}
{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->


<h2>Scoping</h2>

Lua is a lexically scoped language. The scope of variables begins at the first statement after their declaration and lasts until the end of the innermost block that includes the declaration. Consider the following example:

<div class="code-block console-wrap"><div class="code-block code"><code class="PHP">
-- program to demonstrate
-- scope in Lua
x = 10                   -- global variable
do                        -- new block
  local x = x            -- new 'x', with value 10
  print(x)                --> 10
  x = x+1
     do                    -- another block
        local x = x+1   -- another 'x'
         print(x)         --> 12
     end
   print(x)               --> 11
   end
 print(x)                 --> 10  (the global one)
</code>
</div>
<div  id ="msg1" class="msg">
</div>
<div class="console"></div>
<button class="evalPerl">Run Code!</button>
<ol class="results"></ol> 
</div>

Notice that, in a declaration like local x = x, the new x being declared is not in scope yet, and so the second x refers to the outside variable.

Because of the lexical scoping rules, local variables can be freely accessed by functions defined inside their scope. A local variable used by an inner function is called an upvalue, or external local variable, inside the inner function.

Notice that each execution of a local statement defines new local variables. 






                                                                                                                                                                                                                                                                                                                      