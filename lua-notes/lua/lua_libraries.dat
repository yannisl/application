<!--
{{feature: .. Simplicity the art of maximizing the amount of work not done. The Agile Manifesto}}
{{feature-image:/codeigniter/images/underground_thumb.jpg}}
{{keywords: CodeIgniter,PHP, CodeIgniter, File helper class}}
{{author:Dr Y Lazarides}}
{{date:8 September 2008}}
{{category: PHP, MVC, Parsers}}
{{snippet:using CodeIgniter's file_helper class}}

-->


<h2>Libraries</h2>

Lua can bind to all C standard libraries, for example the standard math library can be used as per the example below:

<div class="code-block console-wrap"><div class="code-block code"><code class="PHP">
-- program to demonstrate
-- functions in Lua

print(math.sin(90))
</code>
</div>
<div  id ="msg1" class="msg">
</div>
<div class="console"></div>
<button class="evalPerl">Run Code!</button>
<ol class="results"></ol> 
</div>


<div class="code-block console-wrap"><div class="code-block code"><code class="PHP">
-- program to demonstrate
-- functions in Lua
function foo(n) return n*2 end
print(foo(7))

</code>
</div>
<div  id ="msg1" class="msg">
</div>
<div class="console"></div>
<button class="evalPerl">Run Code!</button>
<ol class="results"></ol> 
</div>


More than one values can be returned as shown below.

<div class="code-block console-wrap"><div class="code-block code"><code class="PHP">
-- program to demonstrate
-- functions in Lua

function f(a, b) 
 local d=a*a
  return a+b, a*b
end

x,y = f(3,3)
print(x,y)

</code>
</div>
<div  id ="msg1" class="msg">
</div>
<div class="console"></div>
<button class="evalPerl">Run Code!</button>
<ol class="results"></ol> 
</div>

Some programmers use a notation for arguments that start with an underscore. It is a convention and not a requirement.

<div class="code-block console-wrap"><div class="code-block code"><code class="PHP">
-- program to demonstrate
-- functions in Lua
a = 'vorher'
function summe( _v1, _v2)
	local a = _v1 + _v2
	return  a
end

print( summe( 1, 2 ) )
print( a )
print( _v1 )

</code>
</div>
<div  id ="msg1" class="msg">
</div>
<div class="console"></div>
<button class="evalPerl">Run Code!</button>
<ol class="results"></ol> 
</div>

Functions are values:

<div class="code-block console-wrap"><div class="code-block code"><code class="PHP">
-- program to demonstrate
-- functions in Lua
a = 'vorher'
z = function summe( _v1, _v2)
	local a = _v1 + _v2
	return  a
end

print(z)

</code>
</div>
<div  id ="msg1" class="msg">
</div>
<div class="console"></div>
<button class="evalPerl">Run Code!</button>
<ol class="results"></ol> 
</div>


###Anonymous Functions
Anonymous functions in Lua are very similar to those in JavaScript. You can have a self-executing function as follows:

<div class="code-block console-wrap"><div class="code-block code"><code class="PHP">
-- program to demonstrate
-- functions in Lua
(function (a,b)
print(a+b) end)(3,3)
</code>
</div>
<div  id ="msg1" class="msg">
</div>
<div class="console"></div>
<button class="evalPerl">Run Code!</button>
<ol class="results"></ol> 
</div>



